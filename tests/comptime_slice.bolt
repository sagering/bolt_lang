@MyStruct() : type {
    return struct {
        field1 : u8
        field2 : []u8
        field3 : i32
    }
}

extern write(fd : i32, buffer : *u8, count : u64) : u64

println(str : []u8) : i32 {
    write(1, &str[0], len(str))

    nl : [1]u8 = [10]
    write(1, &nl[0], 1)
    return 0
}

print_field_names(@t : type) : i32 {
    ti := typeinfo(t)

    i := 0
    while i < len(ti.fields) {
        println(ti.fields[i].name)
        i = i + 1
    }

    return 0
}

escape_comptime_slice() : []MyStruct() {
    first := MyStruct() {}
    first.field2 = "first"
    second := MyStruct() {}
    second.field2 = "second"
    array := [first, second]
    return array[:]
}

main() : i32 {
    escape_comptime_slice()
    print_field_names(MyStruct())

    return 0
}